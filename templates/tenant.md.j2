# Tenant: {{ tenant.name }}

## VRFs
{% if tenant.vrfs %}
| Name | Enforcement | Direction | Known MCast | IP DP Learning | Health | BDs | vzAny Provided | vzAny Consumed | L3Outs |
|------|-------------|-----------|-------------|----------------|--------|-----|----------------|----------------|--------|
{% for v in tenant.vrfs -%}
| {{ v.name }} | {{ v.pcEnfPref|default('—') }} | {{ v.pcEnfDir|default('—') }} | {{ v.knwMcastAct|default('—') }} | {{ v.ipDataPlaneLearning|default('—') }} | {{ v.health|default('—') }} | {{ v.bd_count|default(0) }} | {{ v.vzAny.prov_contracts|join('<br/>') if v.vzAny and v.vzAny.prov_contracts else 'None' }} | {{ v.vzAny.cons_contracts|join('<br/>') if v.vzAny and v.vzAny.cons_contracts else 'None' }} | {{ v.l3outs|join('<br/>') if v.l3outs else 'None' }} |
{% endfor %}
{% else %}
_No VRFs._
{% endif %}


## Bridge Domains
{% if tenant.bds %}
| Name | Unicast Routing | ARP Flood | L2 Unknown Ucast | Limit IP Learn | Subnets |
|------|------------------|-----------|------------------|----------------|---------|
{% for b in tenant.bds -%}
| {{ b.name }} | {{ b.unicastRoute|default('unknown') }} | {{ b.arpFlood|default('unknown') }} | {{ b.unkMacUcastAct|default('unknown') }} | {{ b.limitIpLearnToSubnets|default('unknown') }} | {%- if b.subnets and b.subnets|length > 0 -%}{%- for s in b.subnets -%}{{ s.ip }}{%- if s.scope %} ({{ s.scope }}){%- endif -%}{% if not loop.last %}<br/>{% endif %}{%- endfor -%}{%- else -%}—{%- endif -%} |
{% endfor %}
{% else %}
_No BDs._
{% endif %}

## EPGs
{% if tenant.epgs %}
| App Profile | EPG | Domains | Static Paths |
|-------------|-----|---------|--------------|
{% for e in tenant.epgs -%}
| {{ e.ap }} | {{ e.name }} | 
{%- if e.domains and e.domains|length > 0 -%}
  {%- for d in e.domains -%}{{ d }}{% if not loop.last %}<br/>{% endif %}{%- endfor -%}
{%- else -%}—{%- endif -%}
| 
{%- if e.static_paths and e.static_paths|length > 0 -%}
  {%- for p in e.static_paths -%}
    {%- if p.kind == 'vpc' -%}
      vPC {{ p.leafs|join('-') }} {{ p.iface_or_pc }}{% if p.vlan %} (vlan {{ p.vlan }}){% endif %}
    {%- elif p.kind == 'single' -%}
      Leaf {{ p.leafs[0] }} {{ p.iface_or_pc }}{% if p.vlan %} (vlan {{ p.vlan }}){% endif %}
    {%- else -%}
      {{ p.raw_tdn }}{% if p.vlan %} (vlan {{ p.vlan }}){% endif %}
    {%- endif -%}
    {%- if not loop.last %}<br/>{% endif -%}
  {%- endfor -%}
{%- else -%}—{%- endif -%}
|
{% endfor %}
{% else %}
_No EPGs._
{% endif %}

## Endpoint Security Groups (ESGs)
{% if tenant.esgs %}
| ESG | Isolation | pcTag | Provided Contracts | Consumed Contracts | EPG Selectors | IP Selectors | Tag Selectors |
|-----|-----------|-------|--------------------|--------------------|---------------|--------------|---------------|
{% for g in tenant.esgs -%}
| {{ g.name }} | {{ g.pcEnfPref|default('—') }} | {{ g.pcTag|default('—') }} | {{ g.prov_contracts|join('<br/>') if g.prov_contracts else 'None' }} | {{ g.cons_contracts|join('<br/>') if g.cons_contracts else 'None' }} | {{ g.epg_selectors|join('<br/>') if g.epg_selectors else 'None' }} | {{ g.ip_selectors|join('<br/>') if g.ip_selectors else 'None' }} | {{ g.tag_selectors|join('<br/>') if g.tag_selectors else 'None' }} |
{% endfor %}
{% else %}
_No ESGs._
{% endif %}


## Contracts
{% if tenant.contracts %}
| Name | Scope | Subjects | Providers | Consumers |
|------|-------|----------|-----------|-----------|
{% for c in tenant.contracts %}
| {{ c.name }} | {{ c.scope|default('tenant') }} | {%- if c.subjects -%}
  {%- for s in c.subjects -%}
    {{ s.name }}{%- if s.flags %} ({{ s.flags|join(', ') }}){% endif %}
    {%- if s.filters %}<br/>Filters: {{ s.filters|join(', ') }}{% endif %}
    {%- if s.graphs %}<br/>Service Graphs: {{ s.graphs|join(', ') }}{% endif %}
    {%- if not loop.last %}<br/><br/>{% endif -%}
  {%- endfor -%}
{%- else -%}—{%- endif -%} | {{ c.providers|join('<br/>') if c.providers else 'None' }} | {{ c.consumers|join('<br/>') if c.consumers else 'None' }} |
{% endfor %}
{% else %}
_No Contracts._
{% endif %}

## L3Outs
{% if tenant.l3outs %}
| Name | VRF | Protocols | External Subnets |
|------|-----|-----------|------------------|
{% for l in tenant.l3outs -%}
| {{ l.name }} | {{ l.vrf|default('') }} | {{ l.protocols|join(', ') if l.protocols else 'None' }} | {{ l.external_subnets|default(0) }} |
{% endfor %}
{% else %}
_No L3Outs._
{% endif %}

## VMM Domains
{% if tenant.vmm %}
| Domain | Type | Mode | Controllers / vCenters | VLAN Pools |
|--------|------|------|------------------------|------------|
{% for v in tenant.vmm %}| {{ v.name }} | {{ v.type }} | {{ v.mode|default('—') }} | {{ v.vcenter|join('<br/>') if v.vcenter else '—' }} | {{ v.vlan_pools|join('<br/>') if v.vlan_pools else '—' }} |
{% endfor %}
{% else %}
_No VMM domains bound in this tenant._
{% endif %}


## L2Outs
{% if tenant.l2outs %}
| L2Out | Bridge Domain | Domains | External EPG | Subnets | Path Attachments | Provided Contracts | Consumed Contracts | Protected By |
|-------|----------------|---------|--------------|---------|------------------|--------------------|--------------------|--------------|
{% for o in tenant.l2outs %}
  {% set has_instps = o.instps and o.instps|length > 0 %}
  {% set domains = o.domains|join('<br/>') if o.domains else '—' %}
  {% if has_instps %}
    {% for instp in o.instps %}
| {% if loop.first %}{{ o.name }}{% endif %} | {% if loop.first %}{{ o.bd }}{% endif %} | {% if loop.first %}{{ domains }}{% endif %} | {{ instp.name }} |{%- if instp.subnets and instp.subnets|length > 0 -%}{%- for s in instp.subnets -%} {{ s.ip|default('') }}{%- if s.scope %} ({{ s.scope }}){%- endif -%}{%- if s.aggregate %} [agg {{ s.aggregate }}]{%- endif -%}{%- if s.name %} — {{ s.name }}{%- endif -%}{% if not loop.last %}<br/>{% endif %}{%- endfor -%}{%- else -%} —{%- endif -%} |{%- if instp.path_attachments and instp.path_attachments|length > 0 -%}{%- for p in instp.path_attachments -%} {%- if p.kind == 'vpc' -%}vPC {{ p.leafs|join('-') }} {{ p.iface_or_pc }}{% if p.vlan %} (vlan {{ p.vlan }}){% endif %}{%- elif p.kind == 'single' -%}Leaf {{ p.leafs[0] }} {{ p.iface_or_pc }}{% if p.vlan %} (vlan {{ p.vlan }}){% endif %}{%- else -%}{{ p.raw_tdn }}{% if p.vlan %} (vlan {{ p.vlan }}){% endif %}{%- endif -%}{%- if not loop.last %}<br/>{% endif -%}{%- endfor -%}{%- else -%} —{%- endif -%} | {{ instp.provided_contracts|join('<br/>') if instp.provided_contracts else '—' }} | {{ instp.consumed_contracts|join('<br/>') if instp.consumed_contracts else '—' }} | {{ instp.protected_by_contracts|join('<br/>') if instp.protected_by_contracts else '—' }} |
    {% endfor %}
  {% else %}
| {{ o.name }} | {{ o.bd }} | {{ domains }} | — | — | — | — | — | — |
  {% endif %}
{% endfor %}
{% else %}
_No L2Outs._
{% endif %}

## Service Graphs
{% if tenant.service_graphs %}
| Graph | Nodes | Redirect Policies | Bound Contract→Subject |
|-------|-------|-------------------|------------------------|
{% for g in tenant.service_graphs %}| {{ g.name }} | {{ g.nodes|map(attribute='name')|list|join(' → ') }} | {{ g.redirect_policies|join(', ') }} | {{ g.bound_contract_subjects|map(attribute='contract')|list|join(', ') }} |
{% endfor %}
{% else %}
_No Service Graphs._
{% endif %}
